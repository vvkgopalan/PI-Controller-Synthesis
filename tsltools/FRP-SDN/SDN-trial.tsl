
initially assume {
  !(haspacket(r1) || haspacket(r2));
  !(forwardsTo(s, noder1()) || forwardsTo(s, noder2()));
}

always assume {
  [s <- addFwd(noder1())] -> X forwardsTo(s, noder1()) W [s <- rmFwd(noder1())];
  [s <- addFwd(noder2())] -> X forwardsTo(s, noder2()) W [s <- rmFwd(noder2())];
}

always guarantee {
  forwardsTo(s, noder1()) && haspacket(s) && dest(s, noder1()) -> F haspacket(r1);
  forwardsTo(s, noder2()) && haspacket(s) && dest(s, noder2()) -> F haspacket(r2);
}